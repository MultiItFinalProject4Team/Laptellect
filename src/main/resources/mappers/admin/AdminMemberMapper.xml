<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.multi.laptellect.admin.member.model.mapper.AdminMemberMapper">

    <resultMap id="AdminMemberResultMap" type="AdminMemberDTO">
        <result column="member_no" property="memberNo"/>
        <result column="social_id" property="socialId"/>
        <result column="member_name" property="memberName"/>
        <result column="email" property="email"/>
        <result column="nick_name" property="nickName"/>
        <result column="tel" property="tel"/>
        <result column="point" property="point"/>
        <result column="role" property="role"/>
        <result column="login_type" property="loginType"/>
        <result column="created_at" property="createdAt"/>
        <result column="is_active" property="isActive"/>
        <result column="is_active_at" property="isActiveAt"/>
    </resultMap>

    <sql id="memberSearch">
        <choose>
            <when test="startDate != null and endDate != null">
                AND m.created_at BETWEEN #{ startDate } AND DATE_ADD(#{ endDate }, INTERVAL 1 DAY) - INTERVAL 1 SECOND
            </when>
            <when test="startDate != null">
                AND m.created_at >= #{ startDate }
            </when>
            <when test="endDate != null">
                AND m.created_at &lt; DATE_ADD(#{ endDate }, INTERVAL 1 DAY)
            </when>
        </choose>

        <choose>
            <when test="cate == 'all'">
                <if test="keyword != null">
                    AND (m.member_name LIKE CONCAT('%', #{ keyword }, '%')
                    OR m.email LIKE CONCAT('%', #{ keyword }, '%')
                    OR m.nick_name LIKE CONCAT('%', #{ keyword }, '%'))
                </if>
            </when>
            <when test="cate == 'userName'">
                <if test="keyword != null">
                    AND m.member_name LIKE CONCAT('%', #{ keyword }, '%')
                </if>
            </when>
            <when test="cate == 'email'">
                <if test="keyword != null">
                    AND m.email LIKE CONCAT('%', #{ keyword }, '%')
                </if>
            </when>
            <when test="cate == 'nickName'">
                <if test="keyword != null">
                    AND m.nick_name LIKE CONCAT('%', #{ keyword }, '%')
                </if>
            </when>
            <when test="cate == 'loginType'">
                <if test="keyword != null">
                    AND m.login_type LIKE CONCAT('%', #{ keyword }, '%')
                </if>
            </when>
        </choose>
    </sql>

    <select id="findAllMember">
        SELECT
              m.*
            , s.social_id
        FROM
            mem_member m
        LEFT JOIN
            mem_social_member s ON s.member_no = m.member_no
        WHERE
            1 = 1
        <include refid="memberSearch"/>
        ORDER BY
            m.member_no DESC
        LIMIT #{ pageSize } OFFSET #{ offset }
    </select>

    <select id="countAllMember">
        SELECT
            COUNT(*)
        FROM
            mem_member m
        LEFT JOIN
            mem_social_member s ON s.member_no = m.member_no
        WHERE
            1 = 1
        <include refid="memberSearch"/>
    </select>

    <update id="updateMember">
        UPDATE
            mem_member
        SET
        <choose>
            <when test="type == 'nickName'">
                nick_name = #{ memberDTO.nickName}
            </when>
            <when test="type == 'email'">
                email = #{ memberDTO.email}
            </when>
            <when test="type == 'tel'">
                tel = #{ memberDTO.tel}
            </when>
        </choose>
        WHERE
            member_no = #{ memberDTO.memberNo }
    </update>

    <update id="updateMemberPassword">
        UPDATE
            mem_password
        SET
            member_password = #{ password }
        WHERE
            member_no = #{ memberNo }
    </update>

</mapper>