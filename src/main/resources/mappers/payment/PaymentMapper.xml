<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.multi.laptellect.payment.model.dao.PaymentDAO">

<!--    <resultMap id="PaymentpageResultMap"-->
<!--               type="com.multi.laptellect.payment.model.dto.PaymentpageDTO"> &lt;!&ndash; db에서 받은 걸 dto로 result 값을 담아줌 dto에서 호출해서 쓰려고 &ndash;&gt;-->
<!--        <result column="username" property="username"/> &lt;!&ndash; 수정할 것. 테이블 컬럼(DB컬럼), property(dto 컬럼이름) &ndash;&gt;-->
<!--        <result column="productname" property="productname"/>-->
<!--        <result column="productinfo" property="productinfo"/>-->
<!--        <result column="date_created" property="date_created"/>-->
<!--        <result column="productprice" property="productprice"/>-->
<!--        <result column="im_port_id" property="imPortId"/>-->

<!--    </resultMap>-->

    <resultMap id="PointResultMap"
               type="com.multi.laptellect.payment.model.dto.PaymentpointDTO"> <!-- db에서 받은 걸 dto로 result 값을 담아줌 dto에서 호출해서 쓰려고 -->
        <result column="payment_point_no" property="paymentPointNo"/> <!-- 수정할 것. 테이블 컬럼(DB컬럼), property(dto 컬럼이름) -->
        <result column="member_no" property="memberNo"/>
        <result column="im_port_id" property="imPortId"/>
        <result column="payment_point_change" property="paymentPointChange"/>
        <result column="payment_point_info" property="paymentPointInfo"/>
    </resultMap>

    <resultMap id="OrderlistResultMap"
               type="com.multi.laptellect.payment.model.dto.OrderlistDTO"> <!-- db에서 받은 걸 dto로 result 값을 담아줌 dto에서 호출해서 쓰려고 -->
        <result column="username" property="username"/> <!-- 수정할 것. 테이블 컬럼(DB컬럼), property(dto 컬럼이름) -->
        <result column="productname" property="productname"/>
        <result column="productinfo" property="productinfo"/>
        <result column="date_created" property="date_created"/>
        <result column="purchaseprice" property="purchaseprice"/>
        <result column="im_port_id" property="imPortId"/>
    </resultMap>

    <resultMap id="memberResultMap" type="memberDTO">
        <result property="memberNo" column="member_no"/>
        <result property="memberName" column="member_name"/>
        <result property="password" column="password"/>
        <result property="point" column="point"/>
        <result property="createDate" column="created_at" jdbcType="TIMESTAMP"/>
        <result property="modifyDate" column="updated_at" jdbcType="TIMESTAMP"/>
    </resultMap>


<!--    <select id="selectpaymentpage" resultMap="PaymentpageResultMap">-->
<!--        SELECT * FROM paymentpage-->
<!--        WHERE username = 'jack'-->
<!--    </select>-->

    <insert id="insertPayment" parameterType="com.multi.laptellect.payment.model.dto.PaymentDTO">
        INSERT INTO payment (
        payment_no,
        username,
        product_name,
        purchase_price,
        date_created,
        im_port_id
        ) VALUES (
        null,
        #{username},
        #{productName},
        #{purchasePrice},
        NOW(),  <!-- 현재 시간을 자동으로 삽입 -->
        #{imPortId}
        )
    </insert>


    <select id="selectOrders" resultMap="OrderlistResultMap">
        SELECT * FROM payment
        WHERE refund = 'N'
        AND username = #{memberName}
        ORDER BY date_created DESC
    </select>

    <update id="updateRefundStatus" parameterType="com.multi.laptellect.payment.model.dto.OrderlistDTO">
        UPDATE payment
        SET refund = 'Y',
        refund_date = NOW()
        WHERE im_port_id = #{imPortId}
    </update>

    <insert id="saveReview" parameterType="com.multi.laptellect.payment.model.dto.PaymentReviewDTO">
        INSERT INTO payment_product_reviews VALUES (
        NULL,
        #{username},
        #{productName},
        DEFAULT,
        #{content},
        #{rating},
        #{imPortId},
        NOW(),  <!-- 현재 시간을 자동으로 삽입 -->
        NULL
        )
    </insert>

    <select id="getReviewedOrders" resultType="string">
        SELECT im_port_id FROM payment_product_reviews
    </select>

    <select id="selectpoint" resultMap="PointResultMap">
        SELECT * FROM payment_point
        WHERE member_no = #{memberNo}
        ORDER BY payment_point_no DESC LIMIT 1
    </select>


    <insert id="usepoint" parameterType="com.multi.laptellect.payment.model.dto.PaymentpointDTO">
        INSERT INTO payment_point (
        member_no,
        im_port_id,
        payment_point_change,
        payment_point_info,
        created_at
        )
        SELECT
        #{memberNo},
        #{imPortId},
        CONCAT('-', #{usedPoints}),
        '구매 시 포인트사용',
        NOW()
    </insert>


    <insert id="givepoint" parameterType="com.multi.laptellect.payment.model.dto.PaymentpointDTO">
        INSERT INTO payment_point (
        member_no,
        im_port_id,
        payment_point_change,
        payment_point_info,
        created_at
        )
        SELECT
        #{memberNo},
        #{imPortId},
        CONCAT('+', 500),
        '구매 후 리뷰작성 포인트지급',
        NOW()
    </insert>

    <insert id="refundpoint" parameterType="com.multi.laptellect.payment.model.dto.PaymentpointDTO">
        INSERT INTO payment_point (
        member_no,
        im_port_id,
        payment_point_change,
        payment_point_info,
        created_at
        )
        SELECT
        #{memberNo},
        #{imPortId},
        CONCAT('+', #{usedPoints}),
        '상품환불로인한 사용포인트 환불',
        NOW()
    </insert>

    <insert id="refundReviewdPoint" parameterType="com.multi.laptellect.payment.model.dto.PaymentpointDTO">
        INSERT INTO payment_point (
        member_no,
        im_port_id,
        payment_point_change,
        payment_point_info,
        created_at
        )
        SELECT
        #{memberNo},
        #{imPortId},
        -500,
        '상품환불로인한 리뷰작성 포인트 환불',
        NOW()
    </insert>

    <insert id="newMemberPoint" parameterType="com.multi.laptellect.payment.model.dto.PaymentpointDTO">
        INSERT INTO payment_point (
        member_no,
        im_port_id,
        payment_point_change,
        payment_point_info,
        created_at
        )
        SELECT
        #{memberNo},
        #{imPortId},
        0,
        '신규회원',
        NOW()
    </insert>

    <select id="select_refundpoint" resultMap="PointResultMap">
        SELECT * FROM payment_point
        WHERE im_port_id = #{imPortId}
        ORDER BY payment_point_no DESC LIMIT 1
    </select>

    <select id="findReview" resultType="boolean">
        SELECT EXISTS (
        SELECT 1
        FROM payment_product_reviews
        WHERE im_port_id = #{imPortId}
        ) as exists_flag
    </select>


    <select id="findReviewedPoint" parameterType="com.multi.laptellect.payment.model.dto.PaymentpointDTO">
        SELECT payment_point_change FROM payment_point
        WHERE im_port_id = #{imPortId}
        ORDER BY payment_point_no ASC LIMIT 1
    </select>

    <select id="findProduct" parameterType="com.multi.laptellect.payment.model.dto.PaymentpageDTO">
        SELECT product_name, product_code, type_no, price, product_info, upload_name FROM view_paymentpage
        where product_name = #{productName}
    </select>


</mapper>