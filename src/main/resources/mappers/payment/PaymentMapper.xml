<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.multi.laptellect.payment.model.dao.PaymentDAO">

    <resultMap id="PaymentpageResultMap"
               type="com.multi.laptellect.payment.model.dto.PaymentpageDTO"> <!-- db에서 받은 걸 dto로 result 값을 담아줌 dto에서 호출해서 쓰려고 -->
        <result column="username" property="username"/> <!-- 수정할 것. 테이블 컬럼(DB컬럼), property(dto 컬럼이름) -->
        <result column="productname" property="productname"/>
        <result column="productinfo" property="productinfo"/>
        <result column="date_created" property="date_created"/>
        <result column="productprice" property="productprice"/>
        <result column="imd" property="imd"/>
    </resultMap>

    <resultMap id="PointResultMap"
               type="com.multi.laptellect.payment.model.dto.PaymentpointDTO"> <!-- db에서 받은 걸 dto로 result 값을 담아줌 dto에서 호출해서 쓰려고 -->
        <result column="username" property="username"/> <!-- 수정할 것. 테이블 컬럼(DB컬럼), property(dto 컬럼이름) -->
        <result column="imd" property="imd"/>
        <result column="payment_possession_point" property="possessionpoint"/>
        <result column="payment_point_change" property="pointchange"/>
        <result column="payment_point_info" property="pointinfo"/>
    </resultMap>

    <resultMap id="OrderlistResultMap"
               type="com.multi.laptellect.payment.model.dto.OrderlistDTO"> <!-- db에서 받은 걸 dto로 result 값을 담아줌 dto에서 호출해서 쓰려고 -->
        <result column="username" property="username"/> <!-- 수정할 것. 테이블 컬럼(DB컬럼), property(dto 컬럼이름) -->
        <result column="productname" property="productname"/>
        <result column="productinfo" property="productinfo"/>
        <result column="date_created" property="date_created"/>
        <result column="purchaseprice" property="purchaseprice"/>
        <result column="imd" property="imd"/>
    </resultMap>

    <select id="selectpaymentpage" resultMap="PaymentpageResultMap">
        SELECT * FROM paymentpage
        WHERE username = 'jack'
    </select>

    <insert id="insertPayment" parameterType="com.multi.laptellect.payment.model.dto.PaymentDTO">
        INSERT INTO payment (
        payment_no,
        username,
        productname,
        productinfo,
        productprice,
        purchaseprice,
        date_created,
        imd
        ) VALUES (
        null,
        #{username},
        #{productname},
        #{productinfo},
        #{productprice},
        #{purchaseprice},
        NOW(),  <!-- 현재 시간을 자동으로 삽입 -->
        #{imd}
        )
    </insert>


    <select id="selectOrders" resultMap="OrderlistResultMap">
        SELECT * FROM payment
        WHERE refund = 'N'
        AND username = 'jack'
        ORDER BY date_created DESC
    </select>

    <update id="updateRefundStatus" parameterType="com.multi.laptellect.payment.model.dto.OrderlistDTO">
        UPDATE payment
        SET refund = 'Y',
        refund_date = NOW()
        WHERE imd = #{ImpUid}
    </update>

    <insert id="saveReview" parameterType="com.multi.laptellect.payment.model.dto.PaymentReviewDTO">
        INSERT INTO payment_product_reviews VALUES (
        NULL,
        #{username},
        #{productName},
        DEFAULT,
        #{content},
        #{rating},
        #{impUid},
        NOW(),  <!-- 현재 시간을 자동으로 삽입 -->
        NULL
        )
    </insert>

    <select id="getReviewedOrders" resultType="string">
        SELECT impUid FROM payment_product_reviews
    </select>

    <select id="selectpoint" resultMap="PointResultMap">
            SELECT * FROM payment_point
            WHERE username = #{username}
            ORDER BY payment_price_no DESC LIMIT 1
    </select>


    <insert id="usepoint" parameterType="com.multi.laptellect.payment.model.dto.PaymentpointDTO">
        INSERT INTO payment_point (
        username,
        imd,
        payment_possession_point,
        payment_point_change,
        payment_point_info,
        create_date
        )
        SELECT
        #{username},
        #{imd},
        (SELECT payment_possession_point FROM payment_point WHERE username = #{username} ORDER BY payment_price_no DESC LIMIT 1) - #{usedPoints},
        CONCAT('-', #{usedPoints}),
        '구매 시 포인트사용',
        NOW()
        FROM dual
        WHERE (SELECT payment_possession_point FROM payment_point WHERE username = #{username} ORDER BY payment_price_no DESC LIMIT 1) >= #{usedPoints}
    </insert>


    <insert id="givepoint" parameterType="com.multi.laptellect.payment.model.dto.PaymentpointDTO">
        INSERT INTO payment_point (
        username,
        imd,
        payment_possession_point,
        payment_point_change,
        payment_point_info,
        create_date
        )
        SELECT
        #{username},
        #{imd},
        (SELECT payment_possession_point FROM payment_point WHERE username = #{username} ORDER BY payment_price_no DESC LIMIT 1) + 500,
        CONCAT('+', 500),
        '구매 후 리뷰작성 포인트지급',
        NOW()
    </insert>

    <insert id="refundpoint" parameterType="com.multi.laptellect.payment.model.dto.PaymentpointDTO">
        INSERT INTO payment_point (
        username,
        imd,
        payment_possession_point,
        payment_point_change,
        payment_point_info,
        create_date
        )
        SELECT
        #{username},
        #{imd},
        COALESCE((SELECT payment_possession_point
        FROM payment_point
        WHERE username = #{username}
        ORDER BY payment_price_no DESC
        LIMIT 1), 0) + CAST(#{usedPoints} AS SIGNED),
        CONCAT('+', #{usedPoints}),
        '상품환불로인한 사용포인트 환불',
        NOW()
        FROM dual
        WHERE EXISTS (SELECT 1 FROM payment_point WHERE username = #{username})
    </insert>

    <select id="select_refundpoint" resultMap="PointResultMap">
        SELECT * FROM payment_point
        WHERE imd = #{impUid}
        ORDER BY payment_price_no DESC LIMIT 1
    </select>

</mapper>